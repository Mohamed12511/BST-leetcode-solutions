
class Solution {
public: 
    TreeNode* ConvertSortedListtoBinarySearchTree(ListNode*head,ListNode*end){
        if(head==end)return NULL;
      ListNode*slow=head;
      ListNode*fast=head;
        while(fast!=end&&fast->next!=end){
        slow=slow->next;
        fast=fast->next->next;
        }
        TreeNode*root=new TreeNode(slow->val);
        root->left=ConvertSortedListtoBinarySearchTree(head,slow);
        root->right=ConvertSortedListtoBinarySearchTree(slow->next,end);
        return root;
     }
    TreeNode* sortedListToBST(ListNode* head) {
        if(head==NULL)return NULL;
       return  ConvertSortedListtoBinarySearchTree(head,NULL);
    }
};
